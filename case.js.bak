const { readFileSync } = require("fs");
const { join } = require("path");
const logger = require("./utils/logger");
const getDateTime = require("./utils/getDateTime");

module.exports = async (
  reinbot,
  msg,
  id,
  media,
  isGroup,
  userId,
  groupId,
  isMe,
  isOwner,
  msgType,
  msgText,
  command,
  text,
  logCommand,
  reply,
  replyCommand,
  onlyOwner,
  onlyGroup
) => {
  const setting = JSON.parse(
    readFileSync(join(__dirname, "./data/setting.json"))
  );
  let groupMetadata;
  let participants;
  switch (command) {
    case "menu":
    case "mn":
      reinbot.busy = true;
      logCommand();
      const listCommand = `‚ñ†\x20*MENU*\x20‚îì\n‚îó\x20Menampilkan daftar perintah\n‚ñ†\x20*USER*\x20‚îì\n‚îó\x20Data pengguna\n‚ñ†\x20*GROUP*\x20‚îì\n‚îó\x20Menampilkan data group\n‚ñ†\x20*BROADCAST*\x20‚îì\n‚îó\x20Broadcast otomatis\n‚ñ†\x20*PUSHKONTAK*\x20‚îì\n‚îó\x20Push kontak otomatis\n‚ñ†\x20*SAVEKONTAK*\x20‚îì\n‚îó\x20Menyimpan kontak otomatis\n‚ñ†\x20*SETTING*\x20‚îì\n‚îó\x20Pengaturan bot`;
      const notes = `‚ÄºÔ∏è\x20*NOTES:*\n‚Ä¢\x20*Prefix command:*\x20Tambahkan . (titik) disetiap awal perintah\n‚Ä¢\x20*DWYOR:*\x20do with your own risk\n‚Ä¢\x20*${reinbot.name}*\x20Dikembangkan bukan untuk promosi *JUDI* atau bahkan untuk *PENIPUAN*\n‚Ä¢\x20Jangan terlalu barbar *STAY SAFE* ‚úåÔ∏è`;
      try {
        await reinbot.sendMessage(
          id,
          {
            image: { url: "./data/menu.png" },
            caption: `‚ö°\x20*${reinbot.name}\x20„ÉÖ*\x20|\x20*MENU*\x20${
              setting.features.safeMode.status ? "üõ°Ô∏è" : "ü§ñ"
            }\n\n${listCommand}\n\n${notes}\n\n*‚å±\x20${getDateTime()}*\n`,
          },
          { quoted: msg }
        );
        reinbot.busy = false;
      } catch (err) {
        logger("error", "COMMAND MENU", err);
        await replyCommand(err);
        reinbot.busy = false;
      }
      break;
    default:
      require("./features/users")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/groups")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/contacts")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/broadcast")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/pushkontak")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/savekontak")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/setting")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      require("./features/lainnya")(
        reinbot,
        msg,
        id,
        media,
        isGroup,
        userId,
        groupId,
        isMe,
        isOwner,
        msgType,
        msgText,
        command,
        text,
        logCommand,
        reply,
        replyCommand,
        onlyOwner,
        onlyGroup,
        setting,
        groupMetadata,
        participants,
        logger
      );
      break;
  }
};
